<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SDD.Engine.Specs</name>
    </assembly>
    <members>
        <member name="T:SDD.Engine.Specs.IParser">
            <summary>
            TODO: Парсеры.
            </summary>
            
            <remarks>
            <para>
            TODO: По идее, описание должно быть декларативным, чтобы парсер мог
            сгенерироваться. Для начала, парсер может описываться через булевое
            выражение с соответствующим токенизатором на входе.
            </para>
            
            <para>
            Может быть парсер описания роутов. Который из заданной строки выстроит
            роут.
            </para>
            
            TODO: Попробовать набросать контракты для комбинаторных парсеров и может
            примитивную реализацию и внимательно анализировать на применимость к обработке
            роутинга. Может парсеры могут реализовывать ICode. Может можно
            как-то сделать CodeExpression, который формально может кастится к ICode.
            
            https://github.com/benjamin-hodgson/Pidgin - здесь парсеры секвенсятся
            и я тоже планировал сделать такой секвенсинг для ICode.
            Может быть какой-то общий IResult.
            </remarks>
        </member>
        <member name="T:SDD.Engine.Specs.Route">
            TODO:Возможно, будет удобно сделать универсальный класс для формирования
            пути. Могут быть различные реализации и т.п. Как лучше, сделать Route
            цепочкой вроде Route.Term("/api").Number(). Может это будет что-то вроде
            комбинаторных парсеров? Скажем, реюзинг парсера Number.
            TODO: Или это не цепочка, а дерево.
        </member>
    </members>
</doc>
